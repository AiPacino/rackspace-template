# (Exactly one) directory to include all files from.
includedir /etc/munin/conf.d

# Graphics files are generated either via cron or by a CGI process.
# See http://munin-monitoring.org/wiki/CgiHowto2 for more
# documentation.
# Since 2.0, munin-graph has been rewritten to use the cgi code. 
# It is single threaded *by design* now.
#
graph_strategy cgi

# munin-cgi-graph is invoked by the web server up to very many times at the
# same time.  This is not optimal since it results in high CPU and memory
# consumption to the degree that the system can thrash.  Again the default is
# 6.  Most likely the optimal number for max_cgi_graph_jobs is the same as
# max_graph_jobs.
#
munin_cgi_graph_jobs 6

# If the automatic CGI url is wrong for your system override it here:
#
cgiurl_graph /munin-cgi/munin-cgi-graph

# HTML files are normally generated by munin-html, no matter if the
# files are used or not. You can change this to on-demand generation
# by following the instructions in http://munin-monitoring.org/wiki/CgiHowto2
# 
# Notes: 
# - moving to CGI for HTML means you cannot have graph generated by cron.
# - cgi html has some bugs, mostly you still have to launch munin-html by hand
# 
html_strategy cgi

# munin-update runs in parallel.
#
# The default max number of processes is 16, and is probably ok for you.
#
# If set too high, it might hit some process/ram/filedesc limits.
# If set too low, munin-update might take more than 5 min.
#
# If you want munin-update to not be parallel set it to 0.
#
max_processes 16

[prod;db1]
    address prod-db1
    use_node_name yes

[prod;util1]
    address prod-util1
    use_node_name yes

[prod;web1]
    address prod-web1
    use_node_name yes

[prod;web2]
    address prod-web2
    use_node_name yes

[prod;web5]
    address prod-web5
    use_node_name yes

[prod;web6]
    address prod-web6
    use_node_name yes

[stage;multi1]
    address stage-multi1
    use_node_name yes

[dev;multi1]
    address dev-multi1
    use_node_name yes
